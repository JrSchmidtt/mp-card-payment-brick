<html>
    <head>
      <script src="https://sdk.mercadopago.com/js/v2"></script>
    </head>
    <body>
      <div id="cardPaymentBrick_container"></div>
      <script>
        const mp = new MercadoPago('PUBLIC_ACCESS_TOKEN', {
        });
        const bricksBuilder = mp.bricks();
        const renderCardPaymentBrick = async (bricksBuilder) => {
          const settings = {
            initialization: {
              amount: 1, // total amount to be paid
              payer: {
                email: "",
              },
            },
            customization: {
              maxInstallments: 12,
              visual: {
                style: {
                  theme: 'bootstrap', // | 'dark' | 'bootstrap' | 'flat'
                }
              },
            },
            callbacks: {
              onReady: () => {
                // callback called when the Brick is ready
              },
              onSubmit: (cardFormData) => {
                //  callback called when the user clicks on the submit data button
                //  example of sending the data collected by our Brick to your server
                return new Promise((resolve, reject) => {
                  fetch("/process_payment", {
                    method: "POST",
                    headers: {
                      "Content-Type": "application/json",
                    },
                    body: JSON.stringify(cardFormData)
                  })
                    .then((response) => {
                      // receive payment result
                      resolve();
                    })
                    .catch((error) => {
                      // handle error response when trying to create payment
                      reject();
                    })
                });
              },
              onError: (error) => {
                // callback called to all error cases related to the Brick
              },
            },
          };
          window.cardPaymentBrickController = await bricksBuilder.create('cardPayment', 'cardPaymentBrick_container', settings);
        };
        renderCardPaymentBrick(bricksBuilder);
      </script>
    </body>
    </html>